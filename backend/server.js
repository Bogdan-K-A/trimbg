// backend/server.js
import express from "express";
import cors from "cors";
import fs, { mkdirSync } from "fs";
import path from "path";
import multer from "multer";

import { clearOldFiles } from "./utils/clearOldFiles.js";
import processRouter from "./routes/process.js";
import downloadRouter from "./routes/download.js";
import zipRouter from "./routes/zip.js";

const app = express();
const PORT = 4000;

// üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
const uploadDir = "tmp";
const processedDir = "processed";
const zipDir = "zips";

mkdirSync(uploadDir, { recursive: true });
mkdirSync(processedDir, { recursive: true });
mkdirSync(zipDir, { recursive: true });

// üß© –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –º–∏–¥–ª–≤–∞—Ä—ã
app.use(cors()); // –†–∞–∑—Ä–µ—à–∞–µ—Ç –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
app.use(express.json()); // –ü–æ–∑–≤–æ–ª—è–µ—Ç Express —á–∏—Ç–∞—Ç—å JSON-—Ç–µ–ª–æ

// üîÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api
app.use("/api", processRouter); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
app.use("/api", downloadRouter); // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ ZIP-–∞—Ä—Ö–∏–≤–æ–≤
app.use("/api", zipRouter); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ZIP-—Ñ–∞–π–ª–æ–≤

// ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ Server running at http://localhost:${PORT}`);

  // üîÅ –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
  setInterval(() => {
    clearOldFiles(processedDir, 60); // –£–¥–∞–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å—Ç–∞—Ä—à–µ 60 –º–∏–Ω
    clearOldFiles(zipDir, 60); // –£–¥–∞–ª—è–µ—Ç ZIP-—Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 60 –º–∏–Ω
  }, 10 * 60 * 1000);
});
